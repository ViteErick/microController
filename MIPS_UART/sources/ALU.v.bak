module ALU #(parameter LENGTH = 5)(
input clk,
input [LENGTH-1:0] A,B,                  
input [2:0] ALU_Sel,
output reg [LENGTH-1:0] ALU_Out,
    );


localparam AND					= 3'b000;
localparam OR					= 3'b001;
localparam ADD					= 3'b010;
localparam SHIFT_LEFT		= 3'b101;
localparam SUBTRACT			= 3'b110;
localparam SET_LESS_THAN	= 3'b111;

    always @(posedge clk)
    begin
        case(ALU_Sel)
        AND:
           ALU_Out = A & B;
        OR:
           ALU_Out = A | B;
        ADD:
           ALU_Out = A + B;
        SHIFT_LEFT:
           ALU_Out = A<<shamt;
        SUBTRACT:
           ALU_Out = A - B;
        SET_LESS_THAN:
           ALU_Out = A>>1;
        LOGIC_AND:
           ALU_Out = A & B;
        LOGIC_OR:
           ALU_Out = A | B;
        default: ALU_Out = A + B ; 
        endcase
    end

endmodule